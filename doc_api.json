{
    "openapi": "3.0.4",
    "info": {
      "title": "Web",
      "description": "Documention API",
      "contact": {
        "name": "VN_RU"
      },
      "version": "v1"
    },
    "paths": {
      "/api/v1/carts": {
        "get": {
          "tags": [
            "Cart"
          ],
          "summary": "Retrieves all shopping carts",
          "responses": {
            "200": {
              "description": "Returns the list of carts",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Cart"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Cart"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Cart"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "If the request model state is invalid",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            },
            "500": {
              "description": "If there was a server error"
            }
          }
        },
        "post": {
          "tags": [
            "Cart"
          ],
          "summary": "Creates a new shopping cart",
          "requestBody": {
            "description": "Cart data to create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Cart successfully created",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Cart"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Cart"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Cart"
                  }
                }
              }
            },
            "409": {
              "description": "If cart already exists or data conflict occurs",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/carts/{id}": {
        "get": {
          "tags": [
            "Cart"
          ],
          "summary": "Retrieves a specific cart by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The cart ID",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the cart details",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CartDto"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CartDto"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CartDto"
                  }
                }
              }
            },
            "404": {
              "description": "If cart is not found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            },
            "400": {
              "description": "If the request model state is invalid",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Cart"
          ],
          "summary": "Updates an existing shopping cart",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the cart to update",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "description": "Updated cart data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Cart successfully updated"
            },
            "404": {
              "description": "If cart is not found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Cart"
          ],
          "summary": "Deletes a shopping cart",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the cart to delete",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Cart successfully deleted"
            },
            "404": {
              "description": "If cart is not found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/itemcarts": {
        "get": {
          "tags": [
            "ItemCart"
          ],
          "summary": "Retrieves all cart items or filters by cart ID",
          "parameters": [
            {
              "name": "id_cart",
              "in": "query",
              "description": "Optional cart ID filter:\r\n- If provided (greater than 0), returns items for specified cart\r\n- If not provided or 0, returns all cart items",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the list of cart items",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ItemCartDto"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ItemCartDto"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ItemCartDto"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "If the request model state is invalid",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            },
            "500": {
              "description": "If there was a server error"
            }
          }
        },
        "post": {
          "tags": [
            "ItemCart"
          ],
          "summary": "Adds a new item to a shopping cart",
          "requestBody": {
            "description": "Cart item data to create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemCart"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemCart"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemCart"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Cart item successfully created",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemCart"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemCart"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemCart"
                  }
                }
              }
            },
            "409": {
              "description": "If cart item already exists or data conflict occurs",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/itemcarts/{id}": {
        "get": {
          "tags": [
            "ItemCart"
          ],
          "summary": "Retrieves a specific cart item by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The cart item ID",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the cart item details",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemCartDto"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemCartDto"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemCartDto"
                  }
                }
              }
            },
            "404": {
              "description": "If cart item is not found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            },
            "400": {
              "description": "If the request model state is invalid",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "ItemCart"
          ],
          "summary": "Updates an existing cart item",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Updated cart item data (must include ID)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemCart"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemCart"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemCart"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Cart item successfully updated"
            },
            "404": {
              "description": "If cart item is not found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "ItemCart"
          ],
          "summary": "Removes an item from a shopping cart",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the cart item to remove",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Cart item successfully removed"
            },
            "404": {
              "description": "If cart item is not found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/itemorders": {
        "get": {
          "tags": [
            "ItemOrder"
          ],
          "summary": "Retrieves all item orders or filters by order ID",
          "parameters": [
            {
              "name": "id_order",
              "in": "query",
              "description": "Optional order ID to filter items (returns all items if not provided or 0)",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the list of item orders",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ItemOrderDto"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ItemOrderDto"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ItemOrderDto"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "If the request is invalid",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            },
            "500": {
              "description": "If there was a server error"
            }
          }
        },
        "post": {
          "tags": [
            "ItemOrder"
          ],
          "summary": "Adds a new item to an order",
          "requestBody": {
            "description": "Item order data to create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemOrder"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemOrder"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Item order successfully created",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemOrder"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemOrder"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemOrder"
                  }
                }
              }
            },
            "409": {
              "description": "If item order already exists or data conflict occurs",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/itemorders/{id}": {
        "get": {
          "tags": [
            "ItemOrder"
          ],
          "summary": "Retrieves a specific item order by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The item order ID",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the item order details",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemOrderDto"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemOrderDto"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemOrderDto"
                  }
                }
              }
            },
            "404": {
              "description": "If item order is not found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            },
            "400": {
              "description": "If the request is invalid",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "ItemOrder"
          ],
          "summary": "Updates an existing item order",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Updated item order data (must include ID)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemOrder"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemOrder"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Item order successfully updated"
            },
            "404": {
              "description": "If item order is not found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "ItemOrder"
          ],
          "summary": "Deletes an item from an order",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the item order to delete",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Item order successfully deleted"
            },
            "404": {
              "description": "If item order is not found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/orders": {
        "get": {
          "tags": [
            "Order"
          ],
          "summary": "Retrieves all orders or filters by user ID",
          "parameters": [
            {
              "name": "id_user",
              "in": "query",
              "description": "Optional user ID to filter orders (returns all orders if not provided)",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the order list",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "If there was a server error"
            },
            "400": {
              "description": "If the request is invalid"
            }
          }
        },
        "post": {
          "tags": [
            "Order"
          ],
          "summary": "Creates a new order",
          "requestBody": {
            "description": "Order data to create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Order successfully created",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Order"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Order"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            },
            "409": {
              "description": "If order already exists or data conflict occurs",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/orders/{id}": {
        "get": {
          "tags": [
            "Order"
          ],
          "summary": "Retrieves a specific order by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The order ID",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the order details",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Order"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Order"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            },
            "404": {
              "description": "If order is not found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            },
            "400": {
              "description": "If the request is invalid"
            }
          }
        },
        "put": {
          "tags": [
            "Order"
          ],
          "summary": "Updates an existing order",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the order to update",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "description": "Updated order data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Order successfully updated"
            },
            "404": {
              "description": "If order is not found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Order"
          ],
          "summary": "Deletes an order from the system",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the order to delete",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Order successfully deleted"
            },
            "404": {
              "description": "If order is not found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/products": {
        "get": {
          "tags": [
            "Product"
          ],
          "summary": "Retrieves all products or filters by name",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "description": "Optional product name filter (case-sensitive)",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the product list",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "If there was a server error"
            }
          }
        },
        "post": {
          "tags": [
            "Product"
          ],
          "summary": "Adds a new product to the system",
          "requestBody": {
            "description": "Product data to create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Product successfully created",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Product"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Product"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            },
            "409": {
              "description": "If product already exists or data conflict occurs",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/products/{id}": {
        "get": {
          "tags": [
            "Product"
          ],
          "summary": "Retrieves a specific product by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The product ID",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the product details",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Product"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Product"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            },
            "404": {
              "description": "If product is not found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            },
            "400": {
              "description": "If the request is invalid",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            },
            "500": {
              "description": "If there was a server error"
            }
          }
        },
        "put": {
          "tags": [
            "Product"
          ],
          "summary": "Updates an existing product",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the product to update",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "description": "Updated product data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Product successfully updated"
            },
            "404": {
              "description": "If product is not found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Product"
          ],
          "summary": "Deletes a product from the system",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the product to delete",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Product successfully deleted"
            },
            "404": {
              "description": "If product is not found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/users": {
        "get": {
          "tags": [
            "User"
          ],
          "summary": "Retrieves all users",
          "responses": {
            "200": {
              "description": "Returns the list of users",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "If the request is invalid",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            },
            "500": {
              "description": "If there was a server error"
            }
          }
        },
        "patch": {
          "tags": [
            "User"
          ],
          "summary": "Changes user's password",
          "parameters": [
            {
              "name": "username",
              "in": "query",
              "description": "User's username",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "newpassword",
              "in": "query",
              "description": "New password to set",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns user details with updated password",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "404": {
              "description": "If user is not found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/users/{id}": {
        "get": {
          "tags": [
            "User"
          ],
          "summary": "Retrieves a specific user by unique id",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The user id",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the requested user",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "404": {
              "description": "If the user is not found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "User"
          ],
          "summary": "Updates all user information",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "User id to update",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "description": "Complete user data for update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User successfully updated"
            },
            "404": {
              "description": "If user is not found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "User"
          ],
          "summary": "Deletes a user",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "User id to delete",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User successfully deleted"
            },
            "404": {
              "description": "If user is not found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/users/logout": {
        "get": {
          "tags": [
            "User"
          ],
          "summary": "Logs out the current user",
          "responses": {
            "200": {
              "description": "User successfully logged out"
            },
            "500": {
              "description": "If there was a server error during logout"
            }
          }
        }
      },
      "/api/v1/users/register": {
        "post": {
          "tags": [
            "User"
          ],
          "summary": "Registers a new user",
          "requestBody": {
            "description": "User data to register",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User successfully created",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "409": {
              "description": "If user already exists or data conflict occurs",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/users/login": {
        "get": {
          "tags": [
            "User"
          ],
          "summary": "Authenticates a user",
          "parameters": [
            {
              "name": "username",
              "in": "query",
              "description": "User's username",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "password",
              "in": "query",
              "description": "User's password",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns authenticated user details",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "404": {
              "description": "If authentication fails (invalid credentials)",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Cart": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "data_created": {
              "type": "string",
              "format": "date-time"
            },
            "id_user": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "CartDto": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "data_created": {
              "type": "string",
              "format": "date-time"
            }
          },
          "additionalProperties": false
        },
        "ItemCart": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "id_product": {
              "type": "integer",
              "format": "int32"
            },
            "id_cart": {
              "type": "integer",
              "format": "int32"
            },
            "quantity": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "ItemCartDto": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "quantity": {
              "type": "integer",
              "format": "int32"
            },
            "id_product": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "ItemOrder": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "id_product": {
              "type": "integer",
              "format": "int32"
            },
            "id_order": {
              "type": "integer",
              "format": "int32"
            },
            "quantity": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "ItemOrderDto": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "id_product": {
              "type": "integer",
              "format": "int32"
            },
            "quantity": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "Order": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "status": {
              "$ref": "#/components/schemas/Status"
            },
            "data_created": {
              "type": "string",
              "format": "date-time"
            },
            "id_user": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "ProblemDetails": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "nullable": true
            },
            "title": {
              "type": "string",
              "nullable": true
            },
            "status": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "detail": {
              "type": "string",
              "nullable": true
            },
            "instance": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": { }
        },
        "Product": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "price": {
              "type": "integer",
              "format": "int32"
            },
            "quantity": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "Status": {
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer",
          "format": "int32"
        },
        "User": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "phone": {
              "type": "string",
              "nullable": true
            },
            "address": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "password": {
              "type": "string",
              "nullable": true
            },
            "login": {
              "type": "string",
              "nullable": true
            },
            "role": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        }
      }
    }
  }